"""empty message

Revision ID: 4db466d4893c
Revises: 
Create Date: 2025-10-17 22:09:20.159597

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4db466d4893c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artworks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file', sa.String(length=254), nullable=True),
    sa.Column('file_name', sa.String(length=254), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('nomination_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['nomination_id'], ['nominations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('competitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=254), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('start_of_accepting', sa.DateTime(), nullable=True),
    sa.Column('end_of_accepting', sa.DateTime(), nullable=True),
    sa.Column('summing_up', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nominations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=254), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('winner_work_id', sa.Integer(), nullable=True),
    sa.Column('competition_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['competition_id'], ['competitions.id'], ),
    sa.ForeignKeyConstraint(['winner_work_id'], ['artworks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(20), nullable=False),
                    sa.Column('display_name', sa.String(50), nullable=False),
                    sa.Column('access', sa.Boolean(), nullable=False, default=False),
                    sa.PrimaryKeyConstraint('id')
                    )

    # Создаем временную таблицу для проверки существующих данных
    connection = op.get_bind()

    # Проверяем, есть ли уже данные в таблице roles
    result = connection.execute(sa.text("SELECT EXISTS (SELECT 1 FROM roles)")).scalar()

    if not result:
        # Заполняем ролями с русскими названиями
        op.bulk_insert(
            sa.table('roles',
                     sa.Column('id', sa.Integer),
                     sa.Column('title', sa.String),
                     sa.Column('display_name', sa.String),
                     sa.Column('access', sa.Boolean)
                     ),
            [
                {'id': 1, 'title': 'participant', 'display_name': 'Участник', 'access': True},
                {'id': 2, 'title': 'jury_candidate', 'display_name': 'Член жюри', 'access': True},
                {'id': 3, 'title': 'jury', 'display_name': 'Подтвержденный член жюри', 'access': False},
            ]
        )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('f_name', sa.String(length=20), nullable=False),
    sa.Column('s_name', sa.String(length=20), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('about_user', sa.String(length=900), nullable=True),
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('verification_token', sa.String(length=100), nullable=True),
    sa.Column('verification_sent_at', sa.DateTime(), nullable=True),
    sa.Column('reset_password_token', sa.String(length=100), nullable=True),
    sa.Column('reset_password_sent_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reset_password_token'),
    sa.UniqueConstraint('verification_token')
    )
    op.create_table('ratings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rate', sa.Integer(), nullable=True),
    sa.Column('work_id', sa.Integer(), nullable=False),
    sa.Column('juri_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['juri_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['work_id'], ['artworks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ratings')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('nominations')
    op.drop_table('competitions')
    op.drop_table('artworks')
    # ### end Alembic commands ###
